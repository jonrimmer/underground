{"version":3,"file":"underground.js","sources":["../node_modules/lit-html/src/lib/directive.ts","../node_modules/lit-html/src/lib/dom.ts","../node_modules/lit-html/src/lib/part.ts","../node_modules/lit-html/src/lib/template.ts","../node_modules/lit-html/src/lib/template-instance.ts","../node_modules/lit-html/src/lib/template-result.ts","../node_modules/lit-html/src/lib/parts.ts","../node_modules/lit-html/src/lib/default-template-processor.ts","../node_modules/lit-html/src/lib/template-factory.ts","../node_modules/lit-html/src/lib/render.ts","../node_modules/lit-html/src/lit-html.ts","../node_modules/lit-html/src/lib/modify-template.ts","../node_modules/lit-html/src/lib/shady-render.ts","../node_modules/lit-element/src/lib/updating-element.ts","../node_modules/lit-element/src/lib/decorators.ts","../node_modules/lit-element/src/lib/css-tag.ts","../node_modules/lit-element/src/lit-element.ts","../node_modules/rot-js/lib/rng.js","../node_modules/rot-js/lib/display/backend.js","../node_modules/rot-js/lib/display/canvas.js","../node_modules/rot-js/lib/util.js","../node_modules/rot-js/lib/display/hex.js","../node_modules/rot-js/lib/display/rect.js","../node_modules/rot-js/lib/display/tile.js","../node_modules/rot-js/lib/color.js","../node_modules/rot-js/lib/display/term.js","../node_modules/rot-js/lib/text.js","../node_modules/rot-js/lib/constants.js","../node_modules/rot-js/lib/display/display.js","../node_modules/rot-js/lib/eventqueue.js","../node_modules/rot-js/lib/scheduler/scheduler.js","../node_modules/rot-js/lib/scheduler/simple.js","../node_modules/rot-js/lib/scheduler/speed.js","../node_modules/rot-js/lib/scheduler/action.js","../node_modules/rot-js/lib/scheduler/index.js","../node_modules/rot-js/lib/fov/fov.js","../node_modules/rot-js/lib/fov/discrete-shadowcasting.js","../node_modules/rot-js/lib/fov/precise-shadowcasting.js","../node_modules/rot-js/lib/fov/recursive-shadowcasting.js","../node_modules/rot-js/lib/fov/index.js","../node_modules/rot-js/lib/map/map.js","../node_modules/rot-js/lib/map/arena.js","../node_modules/rot-js/lib/map/dungeon.js","../node_modules/rot-js/lib/map/features.js","../node_modules/rot-js/lib/map/uniform.js","../node_modules/rot-js/lib/map/cellular.js","../node_modules/rot-js/lib/map/digger.js","../node_modules/rot-js/lib/map/ellermaze.js","../node_modules/rot-js/lib/map/dividedmaze.js","../node_modules/rot-js/lib/map/iceymaze.js","../node_modules/rot-js/lib/map/rogue.js","../node_modules/rot-js/lib/map/index.js","../node_modules/rot-js/lib/noise/noise.js","../node_modules/rot-js/lib/engine.js","../node_modules/rot-js/lib/index.js","../src/ui/menu.ts","../src/ui/frame.ts","../src/ui/quest-log.ts","../src/util.ts","../src/entities/actor.ts","../src/log-entry.ts","../src/entities/player.ts","../src/entities/enemy.ts","../src/types.ts","../src/entities/cell.ts","../src/entities/treasure.ts","../src/world.ts","../src/constants.ts","../src/camera.ts","../src/entities/manager.ts","../src/ui/game.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      let node = start;\n      while (node !== end) {\n        const n = node!.nextSibling;\n        container.insertBefore(node!, before as Node);\n        node = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes =\n    (container: Node, startNode: Node|null, endNode: Node|null = null):\n        void => {\n          let node = startNode;\n          while (node !== endNode) {\n            const n = node!.nextSibling;\n            container.removeChild(node!);\n            node = n;\n          }\n        };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, cause it to actually be written to the DOM.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange: object = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  parts: TemplatePart[] = [];\n  element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n    let index = -1;\n    let partIndex = 0;\n    const nodesToRemove: Node[] = [];\n    const _prepareTemplate = (template: HTMLTemplateElement) => {\n      const content = template.content;\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          content,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null,\n          false);\n      // Keeps track of the last index associated with a part. We try to delete\n      // unnecessary nodes, but we never want to associate two different parts\n      // to the same index. They must have a constant node between.\n      let lastPartIndex = 0;\n      while (walker.nextNode()) {\n        index++;\n        const node = walker.currentNode as Element | Comment | Text;\n        if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n          if ((node as Element).hasAttributes()) {\n            const attributes = (node as Element).attributes;\n            // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondance between part index and attribute index.\n            let count = 0;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].value.indexOf(marker) >= 0) {\n                count++;\n              }\n            }\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              const stringForPart = result.strings[partIndex];\n              // Find the attribute name\n              const name = lastAttributeNameRegex.exec(stringForPart)![2];\n              // Find the corresponding attribute\n              // All bound attributes have had a suffix added in\n              // TemplateResult#getHTML to opt out of special attribute\n              // handling. To look up the attribute value we also need to add\n              // the suffix.\n              const attributeLookupName =\n                  name.toLowerCase() + boundAttributeSuffix;\n              const attributeValue =\n                  (node as Element).getAttribute(attributeLookupName)!;\n              const strings = attributeValue.split(markerRegex);\n              this.parts.push({type: 'attribute', index, name, strings});\n              (node as Element).removeAttribute(attributeLookupName);\n              partIndex += strings.length - 1;\n            }\n          }\n          if ((node as Element).tagName === 'TEMPLATE') {\n            _prepareTemplate(node as HTMLTemplateElement);\n          }\n        } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n          const data = (node as Text).data!;\n          if (data.indexOf(marker) >= 0) {\n            const parent = node.parentNode!;\n            const strings = data.split(markerRegex);\n            const lastIndex = strings.length - 1;\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            for (let i = 0; i < lastIndex; i++) {\n              parent.insertBefore(\n                  (strings[i] === '') ? createMarker() :\n                                        document.createTextNode(strings[i]),\n                  node);\n              this.parts.push({type: 'node', index: ++index});\n            }\n            // If there's no text, we must insert a comment to mark our place.\n            // Else, we can trust it will stick around after cloning.\n            if (strings[lastIndex] === '') {\n              parent.insertBefore(createMarker(), node);\n              nodesToRemove.push(node);\n            } else {\n              (node as Text).data = strings[lastIndex];\n            }\n            // We have a part for each match found\n            partIndex += lastIndex;\n          }\n        } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n          if ((node as Comment).data === marker) {\n            const parent = node.parentNode!;\n            // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * The previousSibling is already the start of a previous part\n            if (node.previousSibling === null || index === lastPartIndex) {\n              index++;\n              parent.insertBefore(createMarker(), node);\n            }\n            lastPartIndex = index;\n            this.parts.push({type: 'node', index});\n            // If we don't have a nextSibling, keep this node so we have an end.\n            // Else, we can remove it to save future costs.\n            if (node.nextSibling === null) {\n              (node as Comment).data = '';\n            } else {\n              nodesToRemove.push(node);\n              index--;\n            }\n            partIndex++;\n          } else {\n            let i = -1;\n            while ((i = (node as Comment).data!.indexOf(marker, i + 1)) !==\n                   -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              this.parts.push({type: 'node', index: -1});\n            }\n          }\n        }\n      }\n    };\n    _prepareTemplate(element);\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  type: 'node',\n  index: number\n}|{type: 'attribute', index: number, name: string, strings: string[]};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  _parts: Array<Part|undefined> = [];\n  processor: TemplateProcessor;\n  options: RenderOptions;\n  template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: unknown[]) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // When using the Custom Elements polyfill, clone the node, rather than\n    // importing it, to keep the fragment in the template's document. This\n    // leaves the fragment inert so custom elements won't upgrade and\n    // potentially modify their contents by creating a polyfilled ShadowRoot\n    // while we traverse the tree.\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const parts = this.template.parts;\n    let partIndex = 0;\n    let nodeIndex = 0;\n    const _prepareInstance = (fragment: DocumentFragment) => {\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          fragment,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null,\n          false);\n      let node = walker.nextNode();\n      // Loop through all the nodes and parts of a template\n      while (partIndex < parts.length && node !== null) {\n        const part = parts[partIndex];\n        // Consecutive Parts may have the same node index, in the case of\n        // multiple bound attributes on an element. So each iteration we either\n        // increment the nodeIndex, if we aren't on a node with a part, or the\n        // partIndex if we are. By not incrementing the nodeIndex when we find a\n        // part, we allow for the next part to be associated with the current\n        // node if neccessasry.\n        if (!isTemplatePartActive(part)) {\n          this._parts.push(undefined);\n          partIndex++;\n        } else if (nodeIndex === part.index) {\n          if (part.type === 'node') {\n            const part = this.processor.handleTextExpression(this.options);\n            part.insertAfterNode(node.previousSibling!);\n            this._parts.push(part);\n          } else {\n            this._parts.push(...this.processor.handleAttributeExpressions(\n                node as Element, part.name, part.strings, this.options));\n          }\n          partIndex++;\n        } else {\n          nodeIndex++;\n          if (node.nodeName === 'TEMPLATE') {\n            _prepareInstance((node as HTMLTemplateElement).content);\n          }\n          node = walker.nextNode();\n        }\n      }\n    };\n    _prepareInstance(fragment);\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  strings: TemplateStringsArray;\n  values: unknown[];\n  type: string;\n  processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const endIndex = this.strings.length - 1;\n    let html = '';\n    for (let i = 0; i < endIndex; i++) {\n      const s = this.strings[i];\n      // This exec() call does two things:\n      // 1) Appends a suffix to the bound attribute name to opt out of special\n      // attribute value parsing that IE11 and Edge do, like for style and\n      // many SVG attributes. The Template class also appends the same suffix\n      // when looking up attributes to create Parts.\n      // 2) Adds an unquoted-attribute-safe marker for the first expression in\n      // an attribute. Subsequent attribute expressions will use node markers,\n      // and this is safe since attributes with multiple expressions are\n      // guaranteed to be quoted.\n      const match = lastAttributeNameRegex.exec(s);\n      if (match) {\n        // We're starting a new bound attribute.\n        // Add the safe attribute suffix, and use unquoted-attribute-safe\n        // marker.\n        html += s.substr(0, match.index) + match[1] + match[2] +\n            boundAttributeSuffix + match[3] + marker;\n      } else {\n        // We're either in a bound node, or trailing bound attribute.\n        // Either way, nodeMarker is safe to use.\n        html += s + nodeMarker;\n      }\n    }\n    return html + this.strings[endIndex];\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\n\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n  element: Element;\n  name: string;\n  strings: string[];\n  parts: AttributePart[];\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      this.parts[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (v != null &&\n            (Array.isArray(v) ||\n             // tslint:disable-next-line:no-any\n             typeof v !== 'string' && (v as any)[Symbol.iterator])) {\n          for (const t of v as Iterable<unknown>) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        } else {\n          text += typeof v === 'string' ? v : String(v);\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\nexport class AttributePart implements Part {\n  committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(comitter: AttributeCommitter) {\n    this.committer = comitter;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\nexport class NodePart implements Part {\n  options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  _pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Inserts this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n   * its next sibling must be static, unchanging nodes such as those that appear\n   * in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part._insert(this.startNode = createMarker());\n    part._insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Appends this part after `ref`\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref._insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    const value = this._pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this._commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this._commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this._commitNode(value);\n    } else if (\n        Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        (value as any)[Symbol.iterator]) {\n      this._commitIterable(value as Iterable<unknown>);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this._insert(value);\n    this.value = value;\n  }\n\n  private _commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = value as string;\n    } else {\n      this._commitNode(document.createTextNode(\n          typeof value === 'string' ? value : String(value)));\n    }\n    this.value = value;\n  }\n\n  private _commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this._commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart!.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  element: Element;\n  name: string;\n  strings: string[];\n  value: unknown = undefined;\n  _pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n    const value = !!this._pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n    }\n    this.value = value;\n    this._pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  single: boolean;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  element: Element;\n  eventName: string;\n  eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  _options?: AddEventListenerOptions;\n  _pendingValue: undefined|EventHandlerWithOptions = undefined;\n  _boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this._boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this._pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    if (shouldAddListener) {\n      this._options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    this.value = newListener;\n    this._pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): Part[] {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const comitter = new PropertyCommitter(element, name.slice(1), strings);\n      return comitter.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const comitter = new AttributeCommitter(element, name, strings);\n    return comitter.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  stringsArray: WeakMap<TemplateStringsArray, Template>;\n  keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected.` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (renderedDOM: DocumentFragment, template: Template, scopeName: string) => {\n      shadyRenderSet.add(scopeName);\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      // If there are no styles, skip unnecessary work\n      if (styles.length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS!.prepareTemplateStyles(template.element, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < styles.length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      insertNodeIntoTemplate(\n          template, condensedStyle, template.element.content.firstChild);\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(template.element, scopeName);\n      if (window.ShadyCSS!.nativeShadow) {\n        // When in native Shadow DOM, re-add styling to rendered content using\n        // the style ShadyCSS produced.\n        const style = template.element.content.querySelector('style')!;\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else {\n        // When not in native Shadow DOM, at this point ShadyCSS will have\n        // removed the style from the lit template and parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        template.element.content.insertBefore(\n            condensedStyle, template.element.content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options: ShadyRenderOptions) => {\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = container instanceof ShadowRoot &&\n          compatibleShadyCSSVersion && result instanceof TemplateResult;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n          prepareTemplateStyles(\n              renderContainer as DocumentFragment,\n              part.value.template,\n              scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static finalized = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        // tslint:disable-next-line:no-any no symbol in index\n        return (this as any)[key];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        // tslint:disable-next-line:no-any no symbol in index\n        const oldValue = (this as any)[name];\n        // tslint:disable-next-line:no-any no symbol in index\n        (this as any)[key] = value;\n        this.requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n        this.finalized) {\n      return;\n    }\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (typeof superCtor.finalize === 'function') {\n      superCtor.finalize();\n    }\n    this.finalized = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure connection triggers an update. Updates cannot complete before\n    // connection and if one is pending connection the `_hasConnectionResolver`\n    // will exist. If so, resolve it to complete the update, otherwise\n    // requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    } else {\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // if we have a property key, perform property update steps.\n    if (name !== undefined && !this._changedProperties.has(name)) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        // track old value when changing.\n        this._changedProperties.set(name, oldValue);\n        // add to reflecting properties set\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n        // abort the request if the property should not be considered changed.\n      } else {\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve: (r: boolean) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res) => resolve = res);\n    // Ensure any previous update has resolved before updating.\n    // This `await` also ensures that property changes are batched.\n    await previousUpdatePromise;\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    // Allow `performUpdate` to be asynchronous to enable scheduling of updates.\n    const result = this.performUpdate();\n    // Note, this is to avoid delaying an additional microtask unless we need\n    // to.\n    if (result != null &&\n        typeof (result as PromiseLike<unknown>).then === 'function') {\n      await result;\n    }\n    resolve!(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update.\n   *\n   * You can override this method to change the timing of updates. For instance,\n   * to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    if (this.shouldUpdate(this._changedProperties)) {\n      const changedProperties = this._changedProperties;\n      this.update(changedProperties);\n      this._markUpdated();\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    } else {\n      this._markUpdated();\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. This getter can be implemented to\n   * await additional state. For example, it is sometimes useful to await a\n   * rendered element before fulfilling this Promise. To do this, first await\n   * `super.updateComplete` then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(\n        tagName, classOrDescriptor as Constructor<HTMLElement>) :\n    standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          // tslint:disable-next-line:no-any decorator\n          initializer(this: any) {\n            if (typeof element.initializer === 'function') {\n              this[element.key] = element.initializer!.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name!, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n */\nexport const query = _query(\n    (target: NodeSelector, selector: string) => target.querySelector(selector));\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n */\nexport const queryAll = _query(\n    (target: NodeSelector, selector: string) =>\n        target.querySelectorAll(selector));\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\n/**\n * Base-implementation of `@query` and `@queryAll` decorators.\n *\n * @param queryFn exectute a `selector` (ie, querySelector or querySelectorAll)\n * against `target`.\n * @suppress {visibility} The descriptor accesses an internal field on the\n * element.\n */\nfunction _query<T>(queryFn: (target: NodeSelector, selector: string) => T) {\n  return (selector: string) =>\n             (protoOrDescriptor: Object|ClassElement,\n              // tslint:disable-next-line:no-any decorator\n              name?: PropertyKey): any => {\n               const descriptor = {\n                 get(this: LitElement) {\n                   return queryFn(this.renderRoot!, selector);\n                 },\n                 enumerable: true,\n                 configurable: true,\n               };\n               return (name !== undefined) ?\n                   legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n                   standardQuery(descriptor, protoOrDescriptor as ClassElement);\n             };\n}\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): String {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings: TemplateStringsArray, ...values: CSSResult[]) => {\n  const cssText = values.reduce(\n      (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n      strings[0]);\n  return new CSSResult(cssText, constructionToken);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.0.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   */\n  protected static finalized = true;\n\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    super.finalize();\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles!.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  protected renderRoot?: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    this.renderRoot = this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot!,\n              {scopeName: this.localName!, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot!.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nexport default class Rect extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._canvasCache = {};\n    }\n    setOptions(options) {\n        super.setOptions(options);\n        this._canvasCache = {};\n    }\n    draw(data, clearBefore) {\n        if (Rect.cache) {\n            this._drawWithCache(data);\n        }\n        else {\n            this._drawNoCache(data, clearBefore);\n        }\n    }\n    _drawWithCache(data) {\n        let [x, y, ch, fg, bg] = data;\n        let hash = \"\" + ch + fg + bg;\n        let canvas;\n        if (hash in this._canvasCache) {\n            canvas = this._canvasCache[hash];\n        }\n        else {\n            let b = this._options.border;\n            canvas = document.createElement(\"canvas\");\n            let ctx = canvas.getContext(\"2d\");\n            canvas.width = this._spacingX;\n            canvas.height = this._spacingY;\n            ctx.fillStyle = bg;\n            ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n            if (ch) {\n                ctx.fillStyle = fg;\n                ctx.font = this._ctx.font;\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"middle\";\n                let chars = [].concat(ch);\n                for (let i = 0; i < chars.length; i++) {\n                    ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                }\n            }\n            this._canvasCache[hash] = canvas;\n        }\n        this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n    }\n    _drawNoCache(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        if (clearBefore) {\n            let b = this._options.border;\n            this._ctx.fillStyle = bg;\n            this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._spacingX);\n        let height = Math.floor(availHeight / this._spacingY);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        let boxWidth = Math.floor(availWidth / this._options.width);\n        let boxHeight = Math.floor(availHeight / this._options.height);\n        /* compute char ratio */\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        let widthFraction = ratio * boxHeight / boxWidth;\n        if (widthFraction > 1) { /* too wide with current aspect ratio */\n            boxHeight = Math.floor(boxHeight / widthFraction);\n        }\n        return Math.floor(boxHeight / this._options.spacing);\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._spacingX = Math.ceil(opts.spacing * charWidth);\n        this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n        if (opts.forceSquareRatio) {\n            this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n        }\n        this._ctx.canvas.width = opts.width * this._spacingX;\n        this._ctx.canvas.height = opts.height * this._spacingY;\n    }\n}\nRect.cache = false;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        // write the provided symbol to the display\n        let chars = [].concat(ch);\n        process.stdout.write(chars[0]);\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nexport default class Display {\n    constructor(options = {}) {\n        this._data = {};\n        this._dirty = false; // false = nothing, true = all, object = dirty cells\n        this._options = {};\n        options = Object.assign({}, DEFAULT_OPTIONS, options);\n        this.setOptions(options);\n        this.DEBUG = this.DEBUG.bind(this);\n        this._tick = this._tick.bind(this);\n        this._backend.schedule(this._tick);\n    }\n    /**\n     * Debug helper, ideal as a map generator callback. Always bound to this.\n     * @param {int} x\n     * @param {int} y\n     * @param {int} what\n     */\n    DEBUG(x, y, what) {\n        let colors = [this._options.bg, this._options.fg];\n        this.draw(x, y, null, null, colors[what % colors.length]);\n    }\n    /**\n     * Clear the whole display (cover it with background color)\n     */\n    clear() {\n        this._data = {};\n        this._dirty = true;\n    }\n    /**\n     * @see ROT.Display\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n            if (options.layout) {\n                let ctor = BACKENDS[options.layout];\n                this._backend = new ctor();\n            }\n            this._backend.setOptions(this._options);\n            this._dirty = true;\n        }\n        return this;\n    }\n    /**\n     * Returns currently set options\n     */\n    getOptions() { return this._options; }\n    /**\n     * Returns the DOM node of this display\n     */\n    getContainer() { return this._backend.getContainer(); }\n    /**\n     * Compute the maximum width/height to fit into a set of given constraints\n     * @param {int} availWidth Maximum allowed pixel width\n     * @param {int} availHeight Maximum allowed pixel height\n     * @returns {int[2]} cellWidth,cellHeight\n     */\n    computeSize(availWidth, availHeight) {\n        return this._backend.computeSize(availWidth, availHeight);\n    }\n    /**\n     * Compute the maximum font size to fit into a set of given constraints\n     * @param {int} availWidth Maximum allowed pixel width\n     * @param {int} availHeight Maximum allowed pixel height\n     * @returns {int} fontSize\n     */\n    computeFontSize(availWidth, availHeight) {\n        return this._backend.computeFontSize(availWidth, availHeight);\n    }\n    computeTileSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.width);\n        let height = Math.floor(availHeight / this._options.height);\n        return [width, height];\n    }\n    /**\n     * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n     * @param {Event} e event\n     * @returns {int[2]} -1 for values outside of the canvas\n     */\n    eventToPosition(e) {\n        let x, y;\n        if (\"touches\" in e) {\n            x = e.touches[0].clientX;\n            y = e.touches[0].clientY;\n        }\n        else {\n            x = e.clientX;\n            y = e.clientY;\n        }\n        return this._backend.eventToPosition(x, y);\n    }\n    /**\n     * @param {int} x\n     * @param {int} y\n     * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n     * @param {string} [fg] foreground color\n     * @param {string} [bg] background color\n     */\n    draw(x, y, ch, fg, bg) {\n        if (!fg) {\n            fg = this._options.fg;\n        }\n        if (!bg) {\n            bg = this._options.bg;\n        }\n        let key = `${x},${y}`;\n        this._data[key] = [x, y, ch, fg, bg];\n        if (this._dirty === true) {\n            return;\n        } // will already redraw everything \n        if (!this._dirty) {\n            this._dirty = {};\n        } // first!\n        this._dirty[key] = true;\n    }\n    /**\n     * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n     * @param {int} [maxWidth] wrap at what width?\n     * @returns {int} lines drawn\n     */\n    drawText(x, y, text, maxWidth) {\n        let fg = null;\n        let bg = null;\n        let cx = x;\n        let cy = y;\n        let lines = 1;\n        if (!maxWidth) {\n            maxWidth = this._options.width - x;\n        }\n        let tokens = Text.tokenize(text, maxWidth);\n        while (tokens.length) { // interpret tokenized opcode stream\n            let token = tokens.shift();\n            switch (token.type) {\n                case Text.TYPE_TEXT:\n                    let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                    for (let i = 0; i < token.value.length; i++) {\n                        let cc = token.value.charCodeAt(i);\n                        let c = token.value.charAt(i);\n                        // Assign to `true` when the current char is full-width.\n                        isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                        // Current char is space, whatever full-width or half-width both are OK.\n                        isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                        // The previous char is full-width and\n                        // current char is nether half-width nor a space.\n                        if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                            cx++;\n                        } // add an extra position\n                        // The current char is full-width and\n                        // the previous char is not a space.\n                        if (isFullWidth && !isPrevSpace) {\n                            cx++;\n                        } // add an extra position\n                        this.draw(cx++, cy, c, fg, bg);\n                        isPrevSpace = isSpace;\n                        isPrevFullWidth = isFullWidth;\n                    }\n                    break;\n                case Text.TYPE_FG:\n                    fg = token.value || null;\n                    break;\n                case Text.TYPE_BG:\n                    bg = token.value || null;\n                    break;\n                case Text.TYPE_NEWLINE:\n                    cx = x;\n                    cy++;\n                    lines++;\n                    break;\n            }\n        }\n        return lines;\n    }\n    /**\n     * Timer tick: update dirty parts\n     */\n    _tick() {\n        this._backend.schedule(this._tick);\n        if (!this._dirty) {\n            return;\n        }\n        if (this._dirty === true) { // draw all\n            this._backend.clear();\n            for (let id in this._data) {\n                this._draw(id, false);\n            } // redraw cached data \n        }\n        else { // draw only dirty \n            for (let key in this._dirty) {\n                this._draw(key, true);\n            }\n        }\n        this._dirty = false;\n    }\n    /**\n     * @param {string} key What to draw\n     * @param {bool} clearBefore Is it necessary to clean before?\n     */\n    _draw(key, clearBefore) {\n        let data = this._data[key];\n        if (data[4] != this._options.bg) {\n            clearBefore = true;\n        }\n        this._backend.draw(data, clearBefore);\n    }\n}\nDisplay.Rect = Rect;\nDisplay.Hex = Hex;\nDisplay.Tile = Tile;\nDisplay.Term = Term;\n","export default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = [];\n        this._eventTimes = [];\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = [];\n        this._eventTimes = [];\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        let index = this._events.length;\n        for (let i = 0; i < this._eventTimes.length; i++) {\n            if (this._eventTimes[i] > time) {\n                index = i;\n                break;\n            }\n        }\n        this._events.splice(index, 0, event);\n        this._eventTimes.splice(index, 0, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.length) {\n            return null;\n        }\n        let time = this._eventTimes.splice(0, 1)[0];\n        if (time > 0) { /* advance */\n            this._time += time;\n            for (let i = 0; i < this._eventTimes.length; i++) {\n                this._eventTimes[i] -= time;\n            }\n        }\n        return this._events.splice(0, 1)[0];\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        let index = this._events.indexOf(event);\n        if (index == -1) {\n            return undefined;\n        }\n        return this._eventTimes[index];\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        let index = this._events.indexOf(event);\n        if (index == -1) {\n            return false;\n        }\n        this._remove(index);\n        return true;\n    }\n    ;\n    /**\n     * Remove an event from the queue\n     * @param {int} index\n     */\n    _remove(index) {\n        this._events.splice(index, 1);\n        this._eventTimes.splice(index, 1);\n    }\n    ;\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","import { LitElement, html, customElement, property, css } from 'lit-element';\nimport { KEYS } from 'rot-js';\nimport { UIFrame } from './frame';\n\n@customElement('ui-menu')\nexport class UIMenu extends LitElement {\n  @property({ type: Array })\n  options: string[] = [];\n\n  shadowRoot!: ShadowRoot;\n\n  constructor() {\n    super();\n  }\n\n  static get styles() {\n    return css`\n      .option {\n        line-height: 1.5em;\n        min-width: 150px;\n      }\n\n      .option:focus {\n        background-color: blue;\n        outline: none;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n      <ui-frame tabIndex=\"-1\">\n        ${this.options.map(\n          option => html`\n            <div class=\"option\" tabindex=\"0\">${option}</div>\n          `\n        )}\n      </ui-frame>\n    `;\n  }\n\n  focusFirst() {\n    const firstOption = this.shadowRoot.querySelector(\n      '.option:first-child'\n    ) as HTMLElement;\n\n    if (firstOption) {\n      firstOption.focus();\n      return firstOption;\n    }\n\n    return null;\n  }\n\n  async firstUpdated() {\n    this.shadowRoot.addEventListener('keydown', this\n      .onKeydown as EventListener);\n    await (this.shadowRoot.querySelector('ui-frame') as UIFrame).updateComplete;\n    this.focusFirst();\n  }\n\n  onKeydown = (e: KeyboardEvent) => {\n    if (e.keyCode == KEYS.VK_ESCAPE) {\n      this.dispatchEvent(\n        new CustomEvent('ui-close', { bubbles: true, composed: true })\n      );\n      return;\n    }\n\n    let focused = this.shadowRoot.activeElement;\n\n    if (!focused) {\n      focused = this.focusFirst();\n    } else {\n      switch (e.keyCode) {\n        case KEYS.VK_UP:\n          focused = focused.previousElementSibling;\n          break;\n        case KEYS.VK_DOWN:\n          focused = focused.nextElementSibling;\n          break;\n        case KEYS.VK_RETURN:\n          this.dispatchEvent(\n            new CustomEvent('ui-menu-select', {\n              detail: (e.target as HTMLElement).innerText\n            })\n          );\n      }\n    }\n\n    if (focused) {\n      (focused as HTMLElement).focus();\n    }\n\n    e.stopPropagation();\n  };\n}\n","import { LitElement, html, css, customElement } from 'lit-element';\n\n@customElement('ui-frame')\nexport class UIFrame extends LitElement {\n  render() {\n    return html`\n      <div class=\"background\" @click=${this.close}></div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        display: flex;\n        flex-direction: column;\n        z-index: 2;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .background {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: rgba(0, 0, 0, 0.7);\n      }\n\n      .content {\n        background-color: #000;\n        padding: 6px;\n        border: 2px solid #fff;\n        z-index: 3;\n        color: #fff;\n      }\n    `;\n  }\n\n  close() {\n    this.dispatchEvent(\n      new CustomEvent('ui-close', { bubbles: true, composed: true })\n    );\n  }\n}\n","import { LitElement, property, html, css, customElement } from 'lit-element';\nimport { LogEntry } from '../log-entry';\n\nconst dateFormat = Intl.DateTimeFormat(undefined, {\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric'\n});\n\n@customElement('ui-quest-log')\nexport class UIQuestLog extends LitElement {\n  @property({ type: Array })\n  public items: LogEntry[] = [];\n\n  render() {\n    return html`\n      ${this.items.map(\n        item => html`\n          <div class=\"log-entry ${item.type}\">\n            ${dateFormat.format(item.date)} ${item.text}\n          </div>\n        `\n      )}\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        background-color: #000;\n        display: grid;\n        grid-template-columns: auto;\n        grid-template-rows: repeat(5, 1.5em);\n        justify-content: start;\n        padding: 2px 6px;\n      }\n\n      .log-entry.info {\n        color: #aaf;\n      }\n\n      .log-entry.danger {\n        color: #faa;\n      }\n\n      .log-entry.success {\n        color: #0f4;\n      }\n    `;\n  }\n}\n","export function getKeyPress(): Promise<number> {\n  return new Promise(resolve => {\n    const handler = (event: KeyboardEvent) => {\n      window.removeEventListener('keydown', handler);\n      resolve(event.keyCode);\n    };\n    window.addEventListener('keydown', handler);\n  });\n}\n","import { Displayable } from './displayable';\nimport { Entity } from './entity';\nimport { Cell } from './cell';\n\nexport abstract class Actor implements Entity, Displayable {\n  public abstract char: string;\n  public abstract bgColor: string;\n  public abstract fgColor: string;\n  public abstract id: string;\n  public abstract act(): Promise<void> | void;\n  public abstract notifyAttack?(aggressor: Actor): void;\n  public abstract isHostile: boolean;\n  public abstract isPickable: boolean;\n  public abstract weight: number;\n  public abstract strength: number;\n  public abstract name: string;\n  public abstract health: number;\n\n  private _cell: Cell | null = null;\n\n  get cell() {\n    return this._cell;\n  }\n\n  get x() {\n    return this._cell ? this._cell.x : 0;\n  }\n\n  get y() {\n    return this._cell ? this._cell.y : 0;\n  }\n\n  set cell(value: Cell | null) {\n    if (value !== this._cell) {\n      const oldCell = this._cell;\n      this._cell = value;\n\n      if (oldCell) {\n        oldCell.removeEntity(this);\n      }\n\n      if (this._cell) {\n        this._cell.addEntity(this);\n      }\n    }\n  }\n}\n","export class LogEntry {\n  date: Date = new Date();\n  constructor(\n    public text: string,\n    public type: 'info' | 'danger' | 'success' = 'info'\n  ) {}\n}\n","import { getKeyPress } from '../util';\nimport { KEYS } from 'rot-js';\nimport { World } from '../world';\nimport { Actor } from './actor';\nimport { LogEntry } from '../log-entry';\nimport { UIGame } from '../ui/game';\n\nexport class Player extends Actor {\n  public readonly id: string;\n  public char = '@';\n  public bgColor = '#FFF';\n  public fgColor = '#072';\n  public isHostile = false;\n  public isPickable = false;\n  public strength = 10;\n  public weight = 20;\n  public name = 'Player';\n  public health = 100;\n\n  public inventory: Actor[] = [];\n\n  private get burden() {\n    let result = 0;\n    this.inventory.forEach(item => {\n      result += item.weight;\n    });\n    return result;\n  }\n\n  constructor(id: number, private world: World, private ui: UIGame) {\n    super();\n    this.id = `PLY${id}`;\n  }\n\n  async act() {\n    return getKeyPress().then(keyCode => this.handleKeyPress(keyCode));\n  }\n\n  async handleKeyPress(keyCode: number) {\n    let dx = 0;\n    let dy = 0;\n\n    switch (keyCode) {\n      case KEYS.VK_UP:\n        dy = -1;\n        break;\n      case KEYS.VK_DOWN:\n        dy = 1;\n        break;\n      case KEYS.VK_LEFT:\n        dx = -1;\n        break;\n      case KEYS.VK_RIGHT:\n        dx = 1;\n        break;\n    }\n\n    if (dx !== 0 || dy !== 0) {\n      return this.move(dx, dy);\n    }\n  }\n\n  async move(dx: number, dy: number) {\n    if (this.cell) {\n      const target = this.cell.relativeCell(dx, dy);\n\n      if (target.isPassable) {\n        const contents = target.contents;\n\n        let enemy = contents.find(actor => actor.isHostile);\n\n        if (enemy) {\n          const result = await this.ui.showMenu(['Attack', 'Push', 'Talk']);\n\n          switch (result) {\n            case 'Attack':\n              this.attack(enemy);\n              break;\n          }\n          return;\n        }\n\n        for (let actor of target.contents) {\n          if (actor.isPickable) {\n            this.pickup(actor);\n            return;\n          }\n        }\n\n        this.cell = target;\n      }\n    }\n  }\n\n  attack(target: Actor) {\n    this.ui.log(\n      new LogEntry(\n        `${this.name} attacked ${target.name} causing no damage!`,\n        'danger'\n      )\n    );\n\n    if (target.notifyAttack) {\n      target.notifyAttack(this);\n    }\n  }\n\n  pickup(item: Actor) {\n    if (this.burden + item.weight <= this.strength) {\n      item.cell = null;\n      this.inventory.push(item);\n      this.ui.log(\n        new LogEntry(`${this.name} picked up a ${item.name}`, 'success')\n      );\n    }\n  }\n\n  notifyAttack() {}\n}\n","import { World } from '../world';\nimport { Actor } from './actor';\nimport { LogEntry } from '../log-entry';\n\nexport abstract class Enemy extends Actor {\n  public abstract char: string;\n  public abstract bgColor: string;\n  public abstract fgColor: string;\n  public isHostile = true;\n  public currentTarget: Actor | null = null;\n\n  public get isPickable() {\n    return this.health === 0;\n  }\n\n  constructor(\n    public readonly id: string,\n    public weight: number,\n    public name: string,\n    public strength: number,\n    public health: number,\n    private world: World\n  ) {\n    super();\n  }\n\n  notifyAttack(aggressor: Actor) {\n    this.currentTarget = aggressor;\n  }\n\n  act() {\n    if (this.currentTarget) {\n      const { x: tx, y: ty } = this.currentTarget;\n\n      if (Math.abs(tx - this.x) <= 1 && Math.abs(ty - this.y) <= 1) {\n        // In range.\n        this.world.questLog.push(\n          new LogEntry(\n            `${this.name} attacked ${\n              this.currentTarget.name\n            } and caused no damage.`,\n            'danger'\n          )\n        );\n      }\n    }\n  }\n}\n\nexport class Skeleton extends Enemy {\n  public char = 'S';\n  public bgColor = '#000';\n  public fgColor = '#FFF';\n  constructor(id: number, world: World) {\n    super(`SKL${id}`, 15, 'Skeleton', 5, 5, world);\n  }\n}\n","import { Display } from 'rot-js';\n\nexport interface Pos {\n  x: number;\n  y: number;\n}\n\nexport enum Tile {\n  Wall = 0,\n  Floor = 1\n}\n","import { Tile } from '../types';\nimport { Actor } from './actor';\nimport { World } from '../world';\n\nexport class Cell {\n  private _contents = new Map<string, Actor>();\n  public readonly id: string;\n  public seen = false;\n\n  constructor(\n    public readonly x: number,\n    public readonly y: number,\n    public tile: Tile,\n    private world: World\n  ) {\n    this.id = `${x}:${y}`;\n    this.world.reportEmpty(this);\n  }\n\n  get top() {\n    return this.y > 0 ? this.world.grid[this.x][this.y - 1] : null;\n  }\n\n  get bottom() {\n    return this.y < this.world.grid[this.x].length\n      ? this.world.grid[this.x][this.y + 1]\n      : null;\n  }\n\n  get left() {\n    return this.x > 0 ? this.world.grid[this.x - 1][this.y] : null;\n  }\n\n  get right() {\n    return this.x < this.world.grid.length - 1\n      ? this.world.grid[this.x + 1][this.y]\n      : null;\n  }\n\n  relativeCell(dx: number, dy: number) {\n    return this.world.grid[this.x + dx][this.y + dy];\n  }\n\n  get isEmpty() {\n    return this._contents.size === 0;\n  }\n\n  get contents() {\n    return Array.from(this._contents.values());\n  }\n\n  get isPassable() {\n    return this.tile == Tile.Floor;\n  }\n\n  addEntity(entity: Actor) {\n    if (!this._contents.has(entity.id)) {\n      this._contents.set(entity.id, entity);\n\n      if (entity.cell !== this) {\n        entity.cell = this;\n      }\n\n      if (this._contents.size === 1) {\n        this.world.reportOccupied(this);\n      }\n    }\n  }\n\n  removeEntity(entity: Actor) {\n    if (this._contents.has(entity.id)) {\n      this._contents.delete(entity.id);\n\n      if (entity.cell === this) {\n        entity.cell = null;\n      }\n\n      if (this._contents.size === 0) {\n        this.world.reportOccupied(this);\n      }\n    }\n  }\n}\n","import { Actor } from './actor';\n\nexport class Treasure extends Actor {\n  public readonly id: string;\n  public bgColor = '#FF0';\n  public fgColor = '#000';\n  isHostile = false;\n  isPickable = true;\n  weight = 1;\n  strength = 0;\n  health = 100;\n  act(): void {}\n  notifyAttack() {}\n\n  constructor(id: number, public name: string, public char: string) {\n    super();\n    this.id = `TRE${id}`;\n  }\n}\n","import { Map, RNG } from 'rot-js';\nimport Uniform from 'rot-js/lib/map/uniform';\nimport { Skeleton } from './entities/enemy';\nimport { Tile } from './types';\nimport { Cell } from './entities/cell';\nimport { Actor } from './entities/actor';\nimport { EntityManager } from './entities/manager';\nimport { Treasure } from './entities/treasure';\nimport { LogEntry } from './log-entry';\n\nconst worldWidth = 100;\nconst worldHeight = 100;\n\nexport class World {\n  public cells: Cell[][] = [];\n  public map: Uniform | null = null;\n  public width = worldWidth;\n  public height = worldHeight;\n\n  private emptyCells = new Set<Cell>();\n  private occupiedCells = new Set<Cell>();\n\n  public startPoint: Cell;\n\n  constructor(\n    public questLog: LogEntry[],\n    private entityManager: EntityManager\n  ) {\n    for (let x = 0; x < worldWidth; x++) {\n      this.cells[x] = [];\n\n      for (let y = 0; y < worldHeight; y++) {\n        this.cells[x].push(new Cell(x, y, Tile.Wall, this));\n      }\n    }\n\n    const freeCells: { x: number; y: number }[] = [];\n\n    this.map = new Map.Uniform(worldWidth, worldHeight, {});\n    this.map.create((x, y, value) => {\n      if (!value) {\n        this.cells[x][y].tile = Tile.Floor;\n        freeCells.push({ x, y });\n      }\n    });\n\n    // Put the player in the middle of the first room.\n    const [x, y] = this.map.getRooms()[0].getCenter();\n\n    this.startPoint = this.cells[x][y];\n\n    for (let i = 0; i < 20; i++) {\n      const c = RNG.getUniformInt(0, freeCells.length - 1);\n      const { x, y } = freeCells[c];\n\n      this.entityManager.createEntity(id => {\n        const enemy = new Skeleton(id, this);\n        enemy.cell = this.cells[x][y];\n      });\n\n      freeCells.splice(c, 1);\n    }\n\n    for (let i = 0; i < 20; i++) {\n      const c = RNG.getUniformInt(0, freeCells.length - 1);\n      const { x, y } = freeCells[c];\n\n      this.entityManager.createEntity(id => {\n        const treasure = new Treasure(id, 'Cash', '$');\n        treasure.cell = this.cells[x][y];\n        freeCells.splice(c, 1);\n      });\n    }\n  }\n\n  get grid() {\n    return this.cells;\n  }\n\n  reportEmpty(cell: Cell) {\n    this.emptyCells.add(cell);\n    this.occupiedCells.delete(cell);\n  }\n\n  reportOccupied(cell: Cell) {\n    this.emptyCells.delete(cell);\n    this.occupiedCells.add(cell);\n  }\n\n  getAllActors() {\n    const result: Actor[] = [];\n\n    this.occupiedCells.forEach(cell => {\n      result.push(...cell.contents);\n    });\n\n    return result;\n  }\n}\n","export const boardWidth = 30;\nexport const boardHeight = 30;\n","import { World } from './world';\nimport { Player } from './entities/player';\nimport { Display, FOV, Color } from 'rot-js';\nimport { boardWidth, boardHeight } from './constants';\nimport { Tile } from './types';\nimport { Cell } from './entities/cell';\nimport { Displayable } from './entities/displayable';\nimport PreciseShadowcasting from 'rot-js/lib/fov/precise-shadowcasting';\n\nconst DEBUG = false;\n\ntype RGB = [number, number, number];\n\nconst FLOOR1: RGB = [238, 238, 238];\nconst FLOOR2: RGB = [221, 221, 221];\nconst WALL: RGB = [90, 65, 38];\n\nconst WALL_HEX = Color.toHex(WALL);\n\nfunction darken([r, g, b]: RGB, frac: number): RGB {\n  return [r * frac, g * frac, b * frac].map(v => Math.round(v)) as RGB;\n}\n\nexport class Camera {\n  private display: Display;\n  private _player: Player | null = null;\n\n  set player(value: Player) {\n    this._player = value;\n    this.cx = value.x;\n    this.cy = value.y;\n  }\n\n  private windowWidth: number;\n  private windowHeight: number;\n  private cx = 0;\n  private cy = 0;\n  private fov: PreciseShadowcasting;\n\n  get displayContainer() {\n    return this.display.getContainer() as HTMLElement;\n  }\n\n  constructor(private world: World) {\n    this.display = new Display({\n      width: boardWidth,\n      height: boardHeight,\n      fontSize: 18,\n      forceSquareRatio: true\n    });\n\n    this.windowWidth = Math.floor(boardWidth * 0.15);\n    this.windowHeight = Math.floor(boardHeight * 0.15);\n\n    this.fov = new FOV.PreciseShadowcasting((x, y) => {\n      if (this.validCoords(x, y)) {\n        return this.world.cells[x][y].tile === Tile.Floor;\n      }\n      return false;\n    });\n  }\n\n  draw(x: number, y: number, displayable: Displayable) {\n    this.display.draw(\n      x,\n      y,\n      displayable.char,\n      displayable.fgColor,\n      displayable.bgColor\n    );\n  }\n\n  render() {\n    this.updateWindow();\n\n    const visible = new Map<Cell, number>();\n\n    if (this._player) {\n      this.fov.compute(\n        this._player.x,\n        this._player.y,\n        8,\n        (x, y, r, visibility) => {\n          if (this.validCoords(x, y)) {\n            const cell = this.world.cells[x][y];\n            visible.set(cell, visibility);\n            cell.seen = true;\n          }\n        }\n      );\n    }\n\n    for (let rx = 0; rx < boardWidth; rx++) {\n      const x = this.cx + (rx - boardWidth / 2);\n\n      for (let ry = 0; ry < boardHeight; ry++) {\n        const y = this.cy + (ry - boardHeight / 2);\n\n        if (this.validCoords(x, y)) {\n          const cell = this.world.cells[x][y];\n\n          if (visible.has(cell)) {\n            this.drawCell(cell, rx, ry, visible.get(cell) as number);\n          } else {\n            this.drawCell(cell, rx, ry, 0);\n          }\n        } else {\n          this.display.draw(rx, ry, '', '', '');\n        }\n      }\n    }\n  }\n\n  getMapBg = ({ x, y, seen }: Cell, visibility: number) => {\n    const baseColor = (x % 2) + (y % 2) - 1 ? FLOOR1 : FLOOR2;\n    const scaled = seen ? 0.3 + 0.7 * visibility : visibility;\n    return Color.toHex(darken(baseColor, scaled));\n  };\n\n  drawTile(x: number, y: number, cell: Cell, visibility: number) {\n    switch (cell.tile) {\n      case Tile.Floor:\n        this.display.draw(x, y, '', null, this.getMapBg(cell, visibility));\n        break;\n      case Tile.Wall:\n        if (\n          DEBUG &&\n          (cell.x === this.cx - this.windowWidth ||\n            cell.x === this.cx + this.windowHeight ||\n            cell.y === this.cy - this.windowHeight ||\n            cell.y === this.cy + this.windowHeight)\n        ) {\n          this.display.draw(x, y, '', '', '#F00');\n          break;\n        }\n\n        const scaled = cell.seen ? 0.3 + 0.7 * visibility : visibility;\n        this.display.draw(x, y, '', '', Color.toHex(darken(WALL, scaled)));\n        break;\n    }\n  }\n\n  drawCell(cell: Cell, x: number, y: number, visibility: number) {\n    this.drawTile(x, y, cell, visibility);\n\n    if (!cell.isEmpty && visibility > 0.5) {\n      this.draw(x, y, cell.contents[0]);\n    }\n  }\n\n  private updateWindow() {\n    if (this._player) {\n      const dx = this._player.x - this.cx;\n      const dy = this._player.y - this.cy;\n\n      if (dx > this.windowWidth) {\n        this.cx += 1;\n      } else if (dx < -this.windowWidth) {\n        this.cx -= 1;\n      }\n\n      if (dy > this.windowHeight) {\n        this.cy += 1;\n      } else if (dy < -this.windowHeight) {\n        this.cy -= 1;\n      }\n    }\n  }\n\n  validCoords(x: number, y: number) {\n    return x >= 0 && x < this.world.width && y >= 0 && y < this.world.height;\n  }\n}\n","export class EntityManager {\n  private id = 1;\n\n  createEntity(factory: (id: number) => void) {\n    this.id++;\n    return factory(this.id);\n  }\n}\n","import { LitElement, html, css, customElement } from 'lit-element';\nimport { RNG, Scheduler } from 'rot-js';\nimport { Player } from '../entities/player';\nimport { World } from '../world';\nimport { LogEntry } from '../log-entry';\nimport { Camera } from '../camera';\nimport { EntityManager } from '../entities/manager';\nimport { UIMenu } from './menu';\nimport { Actor } from '../entities/actor';\n\n@customElement('ui-game')\nexport class UIGame extends LitElement {\n  scheduler = new Scheduler.Simple<Actor>();\n  player: Player | null = null;\n  world: World;\n  questLog: LogEntry[] = [];\n  camera: Camera;\n  entityManager: EntityManager;\n\n  constructor() {\n    super();\n    RNG.setSeed(11);\n    this.entityManager = new EntityManager();\n    this.world = new World(this.questLog, this.entityManager);\n    this.camera = new Camera(this.world);\n  }\n\n  render() {\n    return html`\n      <h1>Underground</h1>\n      ${this.camera.displayContainer}\n      <ui-quest-log .items=\"${this.questLog}\"></ui-quest-log>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: grid;\n        grid-template-columns: auto;\n        grid-template-rows: auto auto auto;\n        align-content: center;\n        justify-content: center;\n        grid-gap: 12px;\n      }\n\n      h1 {\n        text-align: center;\n        font-weight: normal;\n      }\n    `;\n  }\n\n  log(entry: LogEntry) {\n    this.questLog = [...this.questLog, entry];\n    this.requestUpdate();\n  }\n\n  async firstUpdated() {\n    this.questLog.length = 0;\n    this.questLog.push(new LogEntry('Your adventure begins!', 'info'));\n    this.scheduler.clear();\n\n    this.entityManager.createEntity(id => {\n      const player = new Player(id, this.world, this);\n      player.cell = this.world.startPoint;\n\n      this.player = player;\n      this.camera.player = this.player;\n    });\n\n    this.world.getAllActors().forEach(actor => {\n      this.scheduler.add(actor, true);\n    });\n\n    this.camera.render();\n\n    while (1) {\n      let actor: Actor = this.scheduler.next();\n\n      if (!actor) {\n        break;\n      }\n\n      await actor.act();\n\n      this.camera.render();\n    }\n  }\n\n  showMenu(options: string[]): Promise<string | null> {\n    return new Promise(resolve => {\n      const menu = document.createElement('ui-menu') as UIMenu;\n      document.body.appendChild(menu);\n      menu.options = options;\n\n      menu.addEventListener('ui-close', () => {\n        document.body.removeChild(menu);\n        resolve(null);\n      });\n\n      menu.addEventListener('ui-menu-select', ((e: CustomEvent) => {\n        document.body.removeChild(menu);\n        resolve(e.detail);\n      }) as EventListener);\n    });\n  }\n}\n"],"names":["render","litRender","RNG","color","Color.fromString","Text.tokenize","Text.TYPE_TEXT","Text.TYPE_FG","Text.TYPE_BG","Text.TYPE_NEWLINE","Map","tslib_1.__decorate","Tile","FOV","Scheduler"],"mappings":"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"}